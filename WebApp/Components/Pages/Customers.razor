@page "/customers"
@using WebApp.Clients
@attribute [StreamRendering]
@inject ICustomerClient CustomerClient
@inject NavigationManager Navigation
@rendermode @(new InteractiveServerRenderMode(false))
<PageTitle>Customers</PageTitle>
<h1>Customers</h1>
<p>There you can see list of customers</p>
@if (_customers == null)
{
    <p>
        <em>
            Loading...
        </em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th></th>
            <th>Id</th>
            <th>Full Name</th>
            <th>Phone number</th>
            <th>Email</th>
            <th>Mail address</th>
            <th>Billing address</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var customer in _customers)
        {
            <tr>
                <td>
                    <button class="btn btn-primary" @onclick="()=>NavigateToCustomerInfo(customer.Id)">Info</button>
                </td>
                <td>@customer.Id</td>
                <td>@customer.FullName</td>
                <td>@customer.PhoneNumber</td>
                <td>@customer.Email</td>
                <td>@customer.MailAddress</td>
                <td>@customer.BillingAddress</td>
            </tr>
        }
        </tbody>
    </table>
    
    <button class="btn btn-primary" @onclick="NavigateToAddCustomer">
        Add
    </button>
    
}





@code {
    private List<Customer>? _customers;

    protected async override Task OnInitializedAsync()
    {
        await Task.Delay(Random.Shared.Next(500, 1500));
        var response = await CustomerClient.GetCustomersAsync();
        _customers = response.Customers;
    }

    private void NavigateToAddCustomer()
    {
        Navigation.NavigateTo("customer/add");
    }

    private void NavigateToCustomerInfo(Guid id)
    {
        Navigation.NavigateTo($"customerInfo/{id}");
    }

}